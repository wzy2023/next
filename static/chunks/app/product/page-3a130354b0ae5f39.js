(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5362],{85396:(n,e,t)=>{Promise.resolve().then(t.bind(t,98143))},98143:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>I});var r=t(54568),a=t(7620),i=t(53979),l=t(85493);let s={QUESTION:"question",MARKDOWN:"markdown"},o=[n=>"\n你是一个专业的需求分析助手，擅长从用户的初步想法中提炼出完整、清晰的功能需求，并进一步细化为模块或页面。\n\n你需要：\n1. 首先询问用户这个需求，需要做的页面模块\n2. 确认页面后，再依次询问各个页面上，更细节的需求点\n3. 引导用户补全遗漏的功能点、异常流程、边界情况。\n4. 提供标准化选项，便于用户快速确认关键细节。\n5. 不需要询问界面如何展示之类的问题，只可以询问需求相关的。\n6. 每个问题的选项增加\"不需要\"，代表用户完全不需要此功能。\n7. 最后一个问题的选项，增加\"需求已确认\"，用户选择此选项时，则让用户确认各个功能点，应该做在哪个页面上 (例如提出n个问题，每个问题的选项是可能需要做在这个页面上的各个功能点，让用户选择)\n\n用户身份：独立开发者，具备技术背景，目标是快速、高质量推进开发。\n\n请根据用户的回答记录，继续询问深入且合理的问题，可以是任意数量，每个问题格式如下：\n\n注意必须使用这个格式进行回复：\nJSON 类型为 Column[]\ninterface Column {\n  dataIndex: string\n  title: string\n  valueType: 'checkbox' | 'textarea'\n  valueEnum?: { [key in string]: { text: string } }\n}\n\n历史问答记录如下：\n".concat(n,"\n"),n=>"\n你是一个 UI 界面设计确认助手，帮助用户明确每个功能的展示形式与交互逻辑。\n\n你的任务包括：\n1. 根据需求内容，确认每个需求点，需要做在哪个页面上\n2. 确定每个功能点在界面上的展现形式（表格、卡片、树形结构、表单等）。\n3. 明确用户交互方式（弹窗、抽屉、Tab 页、页面跳转等）。\n4. 提出符合 Ant Design Pro 设计体系的实现建议。\n5. 每个问题的选项增加 \"不需要\"，代表用户完全不需要此功能。\n6. 不需要询问需求相关的问题，只可以询问界面如何展示之类的问题。\n7. 无需考虑边界情况，例如文字超出如何处理、数量过多如何处理，类似问题不需要询问用户\n\n用户身份：独立开发者，希望通过明确的 UI 逻辑加速开发流程。\n\n请提出 3~5 个问题，每个问题格式如下：\n\nJSON 类型为 Column[]\ninterface Column {\n  dataIndex: string\n  title: string\n  valueType: 'checkbox' | 'textarea'\n  valueEnum?: { [key in string]: { text: string } }\n}\n\n历史问答记录如下：\n".concat(n,"\n"),n=>'\n你是一个专业的产品需求文档助手，目标是将用户对话整理为结构清晰的 Markdown 格式需求文档。\n\n要求：\n1. 只关注要实现的核心功能，不要擅自添加问答记录以外的内容。\n2. 文档格式结构必须按照下面"""包裹的格式\n  a. 字段后面加上用什么antd组件来展示\n  b. 字段后面加上有什么特殊操作，例如如果需要复制的话，则加上\n\n"""\n# 收藏夹管理 - 需求文档\n\n## 一、背景\n- 帮助用户快速管理常用链接\n\n---\n\n## 二、页面概览\n- 收藏列表页（`ProTable`）\n- 标签管理页（可选，`EditableProTable`）\n\n---\n\n## 三、功能概述\n\n### 3.1 收藏列表\n- **展示字段**\n  - 名称（`Input`）\n  - 链接（支持一键复制）\n- **操作行为**\n  - 新增（`ModalForm`）\n  - 删除（`Popconfirm`）\n\n| 字段 | 组件    | 说明       |\n| ---- | ------- | ---------- |\n| 名称 | `Input` | 必填       |\n| 链接 | `Input` | URL 校验   |\n\n---\n\n### 3.2 新增/编辑书签\n1. 点击“新增” → 弹出 `ModalForm`\n2. 校验通过 → 调用 `addLink` 接口\n3. 成功后 → 关闭弹窗 + 刷新列表\n```\n"""\n\n\n以下是用户的需求问答记录：\n'.concat(n,"\n"),n=>'\n你是一个资深全栈工程师，需要基于功能文档撰写一份可落地的技术实现方案，\n\n## 已有的项目背景\n\n### 当前项目整体是 Monorepo 的架构\n   目录结构如下，括号内是包名\n     libs\n        hooks（@wzyjs/hooks）\n        types（@wzyjs/types）\n        utils（@wzyjs/utils）\n     persons\n        app (你需要基于这个项目下写技术方案)\n     uis\n        antd（@wzyjs/antd）\n        components（@wzyjs/components）\n\n### app 项目的技术栈\n  React\n  NextJs\n  Antd\n  Antd Icon\n  Antd Pro\n  Ahooks\n  tRPC\n  Prisma\n  MySQL\n\n### app 项目的目录结构\n0. prisma\n1. src/api\n2. src/app\n3. src/components\n4. src/hooks\n5. src/enums\n5. src/consts\n6. src/utils\n\n## 你需要做的事\n你需要基于 persons/app 这个项目，写出详细的技术方案\n不需要具体代码，只需明确设计思路与入参出参，确保开发者可据此落地\n\n\n你的技术方案应该分为三个部分：\n一：prisma 数据库\n目标：明确 zmodel 文件的改动\n可参考以下代码\n"""\nimport "@wzyjs/next/dist/Base" // 引入基础模型包含：id createdAt updatedAt isDeleted\n\nmodel ButtonItem extends Base {\n  groupId String\n\n  sort Int?   @default(999)\n\n  /// ![Buttons.Type] // 使用了\'prisma-json-types-generator\'插件\n  type String\n\n  title String?\n  content String\n}\n"""\n\n该模型文件需要在 \'prisma/models/schema.zmodel\' 内引入\n然后执行 npm run generate\n然后执行 npm run db:push\n\n既可完成数据库部分的操作\n\n\n二：trpc 接口\n项目使用了 \'@zenstackhq/trpc\' 来自动为模型生成 crud 的接口\n所以 crud 接口不需要再写，只需写需要用到的其它接口\n可参考如下代码\n"""\nimport { z } from \'zod\'\nimport { procedure } from \'@/api/trpc/procedures\'\n\nexport const habitGroup = {\n  updateSort: procedure\n  .input(z.array(z.object({\n    id: z.string(),\n    sort: z.number(),\n  })))\n  .mutation(async ({ ctx, input }) => {\n    return ctx.db.$transaction(\n      input.map(item =>\n        ctx.db.habitGroup.update({\n          where: { id: item.id },\n          data: { sort: item.sort },\n        }),\n      ),\n    )\n  }),\n}\n"""\n\n\n三：前端页面\n\n\n以下是产品需求文档内容：\n'.concat(n,"\n")];var u=function(n){return n.Checkbox="checkbox",n.Radio="radio",n.Textarea="textarea",n}({});let c="gpt-4.1",d=[{type:s.QUESTION,title:"需求分析",key:"requirement",prompt:o[0],initData:{columns:[{dataIndex:"content",title:"一句话需求",valueType:u.Textarea}],values:{content:"我想做个抓取rss信息的工具网页，我可以添加指定的抓取链接，然后把链接保存到数据库，再用定时任务去抓取这些链接的内容，将内容存到数据库"}}},{type:s.QUESTION,title:"界面分析",key:"ui",prompt:o[1],initData:{columns:[],values:{}}},{type:s.MARKDOWN,title:"文档生成",key:"document",prompt:o[2],initData:{content:""}},{type:s.MARKDOWN,title:"技术方案",key:"technical",prompt:o[3],initData:{content:""}}];var p=t(45447),m=t(35313);let y=function(n,e){let t=!(arguments.length>2)||void 0===arguments[2]||arguments[2];return JSON.stringify(n.map(n=>{let r={title:n.title,value:""};if([u.Textarea,u.Radio].includes(n.valueType)&&(r.value=null==e?void 0:e[n.dataIndex]),n.valueType===u.Checkbox){var a,i;r.value=null==e?void 0:null===(i=e[n.dataIndex])||void 0===i?void 0:null===(a=i.map)||void 0===a?void 0:a.call(i,e=>{var t,r;return(null==n?void 0:null===(r=n.valueEnum)||void 0===r?void 0:null===(t=r[e])||void 0===t?void 0:t.text)||e}),r.options=t?Object.values(n.valueEnum||[]):[]}return r}).filter(n=>n.value),null,2)},v=n=>n.map(n=>({...n,fieldProps:{...n.fieldProps,disabled:!0}})),k="product-steps-data",x=(0,l.vt)()((0,m.Zr)(n=>({loading:!1,setLoading:e=>n(()=>({loading:e})),steps:d,setSteps:e=>n(()=>({steps:e})),step:{current:0},onNext:()=>n(n=>({step:{...n.step,current:Math.min(n.step.current+1,n.steps.length-1)}})),onPrev:()=>n(n=>({step:{...n.step,current:Math.max(n.step.current-1,0)}})),stepData:d.map(n=>({key:n.key,...n.initData})),setColumns:(e,t)=>n(n=>{let r=[...n.stepData],a=r.findIndex(n=>n.key===e);return -1!==a&&r[a]&&"columns"in r[a]&&(r[a]={...r[a],columns:t}),{stepData:r}}),setValues:(e,t)=>n(n=>{let r=[...n.stepData],a=r.findIndex(n=>n.key===e);return -1!==a&&r[a]&&"values"in r[a]&&(r[a]={...r[a],values:t}),{stepData:r}}),appendColumns:(e,t)=>n(n=>{let r=[...n.stepData],a=r.findIndex(n=>n.key===e);if(-1!==a&&r[a]&&"columns"in r[a]){let n=r[a];r[a]={...n,columns:p._.unionBy([...v(n.columns),...t],"dataIndex")}}return{stepData:r}}),setContent:(e,t)=>n(n=>{let r=[...n.stepData],a=r.findIndex(n=>n.key===e);return -1!==a&&r[a]&&"content"in r[a]&&(r[a]={...r[a],content:t}),{stepData:r}}),clearCache:()=>{localStorage.removeItem(k),n(()=>({stepData:d.map(n=>({key:n.key,...n.initData}))}))}}),{name:k,storage:(0,m.KU)(()=>localStorage),partialize:n=>({stepData:n.stepData,step:{current:n.step.current}})})),h=()=>{let{steps:n,step:e,stepData:t,setValues:l}=x(),[o]=i.lVW.useForm(),u=n[e.current],c=t.find(n=>n.key===(null==u?void 0:u.key));if((0,a.useEffect)(()=>{o&&o.setFieldsValue(null==c?void 0:c.values)},[c,o]),!n||0===n.length||e.current<0||e.current>=n.length)return(0,r.jsx)("div",{children:"步骤配置错误"});if(!c)return(0,r.jsx)("div",{children:"找不到当前步骤的数据"});switch(null==u?void 0:u.type){case s.QUESTION:if("columns"in c&&"values"in c)return(0,r.jsx)(i.kyL,{form:o,layout:"vertical",columns:c.columns,submitter:!1,initialValues:c.values,onValuesChange:(n,e)=>{u.key&&l(u.key,e)}});return null;case s.MARKDOWN:if("content"in c)return(0,r.jsx)(i.ozN,{content:c.content});return null;default:return(0,r.jsxs)("div",{children:["未知的步骤类型: ",(null==u?void 0:u.type)||"未定义"]})}},{Step:f}=i.gje,{Header:g,Footer:j,Content:b}=i.PEP,I=()=>{let{steps:n,step:e,stepData:t,loading:a,setLoading:l,setContent:o,setColumns:u,setValues:d,appendColumns:m,clearCache:k,onNext:I,onPrev:D}=x(),C=n[e.current],N=t.find(n=>n.key===(null==C?void 0:C.key)),w=n[e.current+1],S=t.find(n=>n.key===(null==w?void 0:w.key)),z=async()=>{var r,a;if(e.current<0||e.current>=n.length||!N||!C)return;let i=n[e.current-1],u=t.find(n=>n.key===(null==i?void 0:i.key));switch(C.type){case s.QUESTION:if(!("columns"in N)||!("values"in N))return;let{values:d,columns:v}=N,k=y(v,d);l(!0);let x=null===(r=C.prompt)||void 0===r?void 0:r.call(C,k);if(!x)return;let h=await p.ai302.chat(x,c);Array.isArray(h)&&C.key&&m(C.key,h),l(!1);break;case s.MARKDOWN:if(!("content"in N))return;let f=N.content;if(u){if((null==i?void 0:i.type)==="question"&&"columns"in u&&"values"in u){let{values:n,columns:e}=u;f=y(e,n,!1)}(null==i?void 0:i.type)==="markdown"&&"content"in u&&(f=u.content)}l(!0);let g=null===(a=C.prompt)||void 0===a?void 0:a.call(C,f);if(!g)return;let j=await p.ai302.chat(g,c,!1);C.key&&o(C.key,j||""),l(!1)}};return(0,r.jsxs)(i.PEP,{style:{height:"100vh"},children:[(0,r.jsx)(g,{style:{padding:16,background:"#fff"},children:(0,r.jsx)(i.gje,{current:e.current,children:n.map(n=>(0,r.jsx)(f,{title:n.title},n.key))})}),(0,r.jsx)(b,{style:{padding:24,overflow:"auto"},children:(0,r.jsx)(h,{})}),(0,r.jsxs)(j,{style:{padding:16,background:"#fff",display:"flex",justifyContent:"space-between",alignItems:"center"},children:[(0,r.jsx)(i.$nd,{icon:(0,r.jsx)(i.SUY,{}),danger:!0,onClick:()=>{k(),i.iUO.success("缓存已清除")},style:{marginRight:"auto"},children:"清除缓存"}),(0,r.jsxs)("div",{style:{display:"flex",gap:12},children:[e.current>0&&(0,r.jsx)(i.$nd,{onClick:D,children:"上一步"}),(0,r.jsx)(i.$nd,{type:"primary",loading:a,onClick:z,children:"AI 生成"}),e.current<n.length-1&&(0,r.jsx)(i.$nd,{onClick:()=>{N&&"columns"in N&&(null==S?void 0:S.key)&&(null==w?void 0:w.type)==="question"&&(d(S.key,N.values),u(S.key,v(N.columns))),I()},children:"下一步"})]})]})]})}}},n=>{var e=e=>n(n.s=e);n.O(0,[6854,6410,541,6771,2602,1598,1815,8259,1210,2998,6502,5888,4030,794,9223,4033,9565,2983,3651,1026,3261,5533,587,8315,7358],()=>e(85396)),_N_E=n.O()}]);