{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/api/auth/[...nextauth]",
      "regex": "^/api/auth/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPnextauth": "nxtPnextauth"
      },
      "namedRegex": "^/api/auth/(?<nxtPnextauth>.+?)(?:/)?$"
    },
    {
      "page": "/api/trpc/[trpc]",
      "regex": "^/api/trpc/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtrpc": "nxtPtrpc"
      },
      "namedRegex": "^/api/trpc/(?<nxtPtrpc>[^/]+?)(?:/)?$"
    },
    {
      "page": "/buttons/[[...rest]]",
      "regex": "^/buttons(?:/(.+?))?(?:/)?$",
      "routeKeys": {
        "nxtPrest": "nxtPrest"
      },
      "namedRegex": "^/buttons(?:/(?<nxtPrest>.+?))?(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/auth/error",
      "regex": "^/auth/error(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/error(?:/)?$"
    },
    {
      "page": "/auth/new-user",
      "regex": "^/auth/new\\-user(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/new\\-user(?:/)?$"
    },
    {
      "page": "/auth/signin",
      "regex": "^/auth/signin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/signin(?:/)?$"
    },
    {
      "page": "/auth/unauthorized",
      "regex": "^/auth/unauthorized(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/unauthorized(?:/)?$"
    },
    {
      "page": "/collecting",
      "regex": "^/collecting(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/collecting(?:/)?$"
    },
    {
      "page": "/habit",
      "regex": "^/habit(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/habit(?:/)?$"
    },
    {
      "page": "/habit/manage",
      "regex": "^/habit/manage(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/habit/manage(?:/)?$"
    },
    {
      "page": "/habit/record",
      "regex": "^/habit/record(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/habit/record(?:/)?$"
    },
    {
      "page": "/info",
      "regex": "^/info(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/info(?:/)?$"
    },
    {
      "page": "/order-demand",
      "regex": "^/order\\-demand(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/order\\-demand(?:/)?$"
    },
    {
      "page": "/product",
      "regex": "^/product(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/product(?:/)?$"
    },
    {
      "page": "/role",
      "regex": "^/role(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/role(?:/)?$"
    },
    {
      "page": "/rss",
      "regex": "^/rss(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/rss(?:/)?$"
    },
    {
      "page": "/task",
      "regex": "^/task(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/task(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}